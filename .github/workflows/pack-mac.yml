name: Mac-CI

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:

    runs-on: macOS-latest
    strategy:
      matrix:
        ghc: ['9.2.3']
        cabal: ['3.6.2.0']
        
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Setup Haskell
      uses: haskell/actions/setup@v1
      id: setup-haskell-cabal
      with:
        ghc-version: ${{ matrix.ghc }}
        cabal-version: ${{ matrix.cabal }}
        
    - name: Freeze
      run: |
        cabal freeze
    - name: Cache cabal
      uses: actions/cache@v2
      id: cache-cabal
      with:
        path: '~/.cabal'
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('/Users/runner/work/cadavre-logicielle-player/cadavre-logicielle-player/app') }}-a
        
    - name: Cache dist
      uses: actions/cache@v2
      id: cache-bin
      with:
        path: '/dist-newstyle/'
        key: ${{ runner.os }}-${{ matrix.ghc }}-${{ hashFiles('/Users/runner/work/cadavre-logicielle-player/cadavre-logicielle-player/app') }}-b
    
    - name: cabal update and build
      run: |
            cabal update
            cabal v2-build --enable-tests
    
    - name : make directory
      run: mkdir binary
 
    - name: move executable
      run: cp -R dist-newstyle/build/x86_64-osx/ghc-${{ matrix.ghc }}/cadavre-logicielle-player-0.1.0.0/x/cl-player/build/cl-player/cl-player binary/cl-player
  
    - name: move static
      run : cp -R static binary/static
    
    - name: setup node
      uses: actions/setup-node@v3
      with:
         node-version: 16
    
    - name: electron forge
      run: |
            npm install --save-dev @electron-forge/cli
            npx electron-forge import
            npm run make
            
    - name: Release
      uses: softprops/action-gh-release@v1
      with:
          files: out/make/zip/darwin/x64/*.zip
